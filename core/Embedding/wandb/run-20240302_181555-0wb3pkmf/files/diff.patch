diff --git a/core/Embedding/examples/line_wiki.py b/core/Embedding/examples/line_wiki.py
index 05bb90b..661eb97 100644
--- a/core/Embedding/examples/line_wiki.py
+++ b/core/Embedding/examples/line_wiki.py
@@ -1,6 +1,7 @@
 
 import numpy as np
-
+import os, sys
+sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
 from ge.classify import read_node_label, Classifier
 from ge import LINE
 from sklearn.linear_model import LogisticRegression
diff --git a/core/Embedding/ge/__init__.py b/core/Embedding/ge/__init__.py
index eaf0de4..9b6d7c2 100644
--- a/core/Embedding/ge/__init__.py
+++ b/core/Embedding/ge/__init__.py
@@ -1,2 +1,2 @@
-from .models import *
-from utils import *
\ No newline at end of file
+from ge.models import *
+from ge.utils import *
\ No newline at end of file
diff --git a/core/Embedding/nevergrad_demo.py b/core/Embedding/nevergrad_demo.py
index a1be3ff..575919c 100644
--- a/core/Embedding/nevergrad_demo.py
+++ b/core/Embedding/nevergrad_demo.py
@@ -9,18 +9,8 @@ import os, sys
 sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
 # Import organization
 import numpy as np
-import scipy.sparse as ssp
 import torch
 
-from ogb.linkproppred import PygLinkPropPredDataset, Evaluator
-from heuristic.eval import (
-    evaluate_auc,
-    evaluate_hits,
-    evaluate_mrr,
-    get_metric_score,
-    get_prediction
-)
-
 from torch_geometric.graphgym.cmd_args import parse_args
 from torch_geometric.graphgym.config import cfg
 import numpy as np
@@ -46,7 +36,7 @@ def objective(ws,
             iter, 
             num_neg_samples):
     
-    cfg_file = "configs/pubmed/node2vec.yaml"
+    cfg_file = "core/configs/pubmed/node2vec.yaml"
     # # Load args file
     with open(cfg_file, "r") as f:
         args = CN.load_cfg(f)
@@ -115,10 +105,9 @@ instru = ng.p.Instrumentation(ws,
 
 print(instru.dimension)  # 5 dimensional space
 print(instru.args, instru.kwargs)
-
 objective(*instru.args)
 
-budget = 20 # How many episode we will do before concluding.
+budget = 4# How many episode we will do before concluding.
 for name in ["RandomSearch"]:
     optim = ng.optimizers.registry[name](parametrization=instru, budget=budget)
     for u in range(budget//2):
diff --git a/core/Embedding/node2vec_tagplus.py b/core/Embedding/node2vec_tagplus.py
index 6d05623..3c14130 100644
--- a/core/Embedding/node2vec_tagplus.py
+++ b/core/Embedding/node2vec_tagplus.py
@@ -1,21 +1,10 @@
-import os
-import sys
-from typing import Dict
+
 import os, sys
 sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
 # Import organization
 import numpy as np
 import scipy.sparse as ssp
 import torch
-import torch_geometric.transforms as T
-from torch_geometric.datasets import Planetoid
-from torch_geometric.data import Data, InMemoryDataset
-from torch_geometric.transforms import RandomLinkSplit
-
-from heuristic.lsf import CN, AA, RA, InverseRA
-from heuristic.gsf import Ben_PPR, shortest_path, katz_apro, katz_close, SymPPR
-from heuristic.semantic_similarity import pairwise_prediction
-
 import matplotlib.pyplot as plt
 from lpda.adjacency import plot_coo_matrix, construct_sparse_adj
 from utils import (
@@ -25,13 +14,8 @@ from utils import (
 )
 from ogb.linkproppred import PygLinkPropPredDataset, Evaluator
 from heuristic.eval import (
-    evaluate_auc,
-    evaluate_hits,
-    evaluate_mrr,
     get_metric_score,
-    get_prediction
 )
-from Embedding.ge import Node2Vec
 from yacs.config import CfgNode as CN
 import networkx as nx
 import yaml
@@ -188,7 +172,6 @@ if __name__ == "__main__":
     # # Load args file
 
     cfg = set_cfg(args)
-    embed()
     cfg.merge_from_list(args.opts)
     
     # Set Pytorch environment
diff --git a/core/Embedding/wb_tune.py b/core/Embedding/wb_tune.py
index 5565eab..8548277 100644
--- a/core/Embedding/wb_tune.py
+++ b/core/Embedding/wb_tune.py
@@ -42,7 +42,7 @@ def objective(config):
     with wandb.init(config=config):
         config = wandb.config
         
-        cfg_file = "configs/pubmed/node2vec.yaml"
+        cfg_file = "/hkfs/work/workspace_haic/scratch/cc7738-TAG/TAPE/core/configs/pubmed/node2vec.yaml"
         # # Load args file
         with open(cfg_file, "r") as f:
             args = CN.load_cfg(f)
@@ -95,6 +95,7 @@ def objective(config):
         clf.fit(X_train, y_train)
 
         score = clf.score(X_test, y_test)
+        print("acc", score)
     return score
 
 
diff --git a/core/node2vec_pred.png b/core/node2vec_pred.png
index 7d79ce9..5e83640 100644
Binary files a/core/node2vec_pred.png and b/core/node2vec_pred.png differ
diff --git a/core/test_edge_index.png b/core/test_edge_index.png
index 5bfa4e9..88da70f 100644
Binary files a/core/test_edge_index.png and b/core/test_edge_index.png differ
diff --git a/core/wandb/latest-run b/core/wandb/latest-run
index b0015eb..0dc94fc 120000
--- a/core/wandb/latest-run
+++ b/core/wandb/latest-run
@@ -1 +1 @@
-run-20240302_093216-lzzmwdw3
\ No newline at end of file
+run-20240302_174653-hinq75fs
\ No newline at end of file
